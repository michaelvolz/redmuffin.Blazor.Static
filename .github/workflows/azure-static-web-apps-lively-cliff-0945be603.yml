# This workflow will build and push a web application to an Azure Static Web App when you change your code.
#
# This workflow assumes you have already created the target Azure Static Web App.
# For instructions see https://docs.microsoft.com/azure/static-web-apps/get-started-portal?tabs=vanilla-javascript
#
# To configure this workflow:
#
# 1. Set up a secret in your repository named AZURE_STATIC_WEB_APPS_API_TOKEN with the value of your Static Web Apps deployment token.
#    For instructions on obtaining the deployment token see: https://docs.microsoft.com/azure/static-web-apps/deployment-token-management
#
# 3. Change the values for the APP_LOCATION, API_LOCATION and APP_ARTIFACT_LOCATION, AZURE_STATIC_WEB_APPS_API_TOKEN environment variables (below).
#    For instructions on setting up the appropriate configuration values go to https://docs.microsoft.com/azure/static-web-apps/front-end-frameworks
name: Deploy web app to Azure Static Web Apps

on:
  push:
    branches: [ "master" ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ "master" ]

# Environment variables available to all jobs and steps in this workflow
env:
  APP_LOCATION: "src/redmuffin.Blazor.StaticWeb" # location of your client code
  API_LOCATION: "src/redmuffin.Blazor.StaticWeb.Api" # location of your api source code - optional
  APP_ARTIFACT_LOCATION: "wwwroot" # location of client code build output
  AZURE_STATIC_WEB_APPS_API_TOKEN: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_LIVELY_CLIFF_0945BE603 }} # secret containing deployment token for your static web app

permissions:
  contents: read

jobs:
  check_changes:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.check.outputs.should_skip }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history to properly check changes
      - name: Check if only documentation files changed
        id: check
        run: |
          # Define documentation files to skip deployment for
          # Add new files to this list as needed (one per line)
          DOC_FILES=(
            "README.md"
            ".github/copilot-instructions.md"
            # Add more documentation files here as needed
            # "CHANGELOG.md"
            # "docs/*.md"
            # etc.
          )

          # Build regex pattern from file list
          PATTERN=""
          for file in "${DOC_FILES[@]}"; do
            if [[ -n "$PATTERN" ]]; then
              PATTERN="$PATTERN|"
            fi
            # Escape dots in filenames for regex
            ESCAPED_FILE=$(echo "$file" | sed 's/\./\\./g')
            PATTERN="${PATTERN}${ESCAPED_FILE}"
          done

          echo "Using file pattern: $PATTERN"

          # For PRs, compare with the base branch
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "Checking PR changes..."
            CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }})
          # For pushes, compare with previous commit
          else
            echo "Checking push changes..."
            CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          fi

          # If empty diff (first commit or error), don't skip
          if [[ -z "$CHANGED_FILES" ]]; then
            echo "Empty diff detected - not skipping deploy"
            echo "should_skip=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Count all changed files
          TOTAL_CHANGED=$(echo "$CHANGED_FILES" | wc -l)

          # Count how many of our docs files changed
          DOC_FILES_CHANGED=$(echo "$CHANGED_FILES" | grep -E "$PATTERN" | wc -l)

          echo "Total files changed: $TOTAL_CHANGED"
          echo "Doc files changed: $DOC_FILES_CHANGED"

          # If only doc files changed and they exist in the changed files list, skip deployment
          if [[ $DOC_FILES_CHANGED -gt 0 && $DOC_FILES_CHANGED -eq $TOTAL_CHANGED ]]; then
            echo "Only documentation files changed, skipping deployment"
            echo "should_skip=true" >> $GITHUB_OUTPUT
          else
            echo "Code files changed, proceeding with deployment"
            echo "should_skip=false" >> $GITHUB_OUTPUT
          fi

  build_and_deploy_job:
    needs: check_changes
    if: |
      (github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')) &&
      needs.check_changes.outputs.should_skip != 'true'
    permissions:
      contents: read # for actions/checkout to fetch code
      pull-requests: write # for Azure/static-web-apps-deploy to comment on PRs
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - name: Log deployment decision
        run: echo "Proceeding with deployment as non-documentation files were changed."

      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_LIVELY_CLIFF_0945BE603 }} # secret containing api token for app
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match you app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: ${{ env.APP_LOCATION }}
          api_location: ${{ env.API_LOCATION }}
          app_artifact_location: ${{ env.APP_ARTIFACT_LOCATION }}
          ###### End of Repository/Build Configurations ######

  docs_only_changed_job:
    needs: check_changes
    if: |
      (github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')) &&
      needs.check_changes.outputs.should_skip == 'true'
    runs-on: ubuntu-latest
    name: Documentation Only Changed
    steps:
      - name: Skip Deployment
        run: |
          echo "Only documentation files (README.md or copilot-instructions.md) changed."
          echo "Skipping deployment process as no code changes were detected."

  close_pull_request_job:
    permissions:
      contents: none
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_LIVELY_CLIFF_0945BE603 }} # secret containing api token for app
          action: "close"